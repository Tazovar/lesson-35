{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nclass TestDirective {\n  constructor() {\n    this.count = 0;\n    this.countChange = new EventEmitter();\n  }\n  onClick() {\n    this.interval = setInterval(() => {\n      this.count++;\n      this.countChange.emit(this.count);\n      console.log(this.count);\n    }, 200);\n  }\n  onClickUp() {\n    clearInterval(this.interval);\n  }\n  static #_ = this.ɵfac = function TestDirective_Factory(t) {\n    return new (t || TestDirective)();\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TestDirective,\n    selectors: [[\"\", \"appTest\", \"\"]],\n    hostBindings: function TestDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function TestDirective_mousedown_HostBindingHandler() {\n          return ctx.onClick();\n        })(\"mouseup\", function TestDirective_mouseup_HostBindingHandler() {\n          return ctx.onClickUp();\n        });\n      }\n    },\n    outputs: {\n      countChange: \"countChange\"\n    }\n  });\n}\nexport { TestDirective };","map":{"version":3,"names":["EventEmitter","TestDirective","constructor","count","countChange","onClick","interval","setInterval","emit","console","log","onClickUp","clearInterval","_","_2","selectors","hostBindings","TestDirective_HostBindings","rf","ctx","TestDirective_mouseup_HostBindingHandler"],"sources":["/Users/tazogelashvili/Desktop/lesson-3/src/app/directives/test.directive.ts"],"sourcesContent":["import { Directive, EventEmitter, HostBinding, HostListener, Output } from \"@angular/core\";\n\n@Directive({\n    selector: '[appTest]'\n})\nexport class TestDirective {\n    count: number = 0;\n    interval: any;\n\n    @Output() countChange: EventEmitter<number> = new EventEmitter<number>(); \n\n    @HostListener('mousedown')\n    onClick() {\n        this.interval = setInterval(() => {\n            this.count++;\n            this.countChange.emit(this.count); \n            console.log(this.count);\n        }, 200);\n    }\n\n    @HostListener('mouseup')\n    onClickUp() {\n        clearInterval(this.interval);\n    }\n}\n"],"mappings":"AAAA,SAAoBA,YAAY,QAA2C,eAAe;;AAE1F,MAGaC,aAAa;EAH1BC,YAAA;IAII,KAAAC,KAAK,GAAW,CAAC;IAGP,KAAAC,WAAW,GAAyB,IAAIJ,YAAY,EAAU;;EAGxEK,OAAOA,CAAA;IACH,IAAI,CAACC,QAAQ,GAAGC,WAAW,CAAC,MAAK;MAC7B,IAAI,CAACJ,KAAK,EAAE;MACZ,IAAI,CAACC,WAAW,CAACI,IAAI,CAAC,IAAI,CAACL,KAAK,CAAC;MACjCM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,KAAK,CAAC;IAC3B,CAAC,EAAE,GAAG,CAAC;EACX;EAGAQ,SAASA,CAAA;IACLC,aAAa,CAAC,IAAI,CAACN,QAAQ,CAAC;EAChC;EAAC,QAAAO,CAAA,G;qBAlBQZ,aAAa;EAAA;EAAA,QAAAa,EAAA,G;UAAbb,aAAa;IAAAc,SAAA;IAAAC,YAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAAbC,GAAA,CAAAd,OAAA,EAAS;QAAA,uBAAAe,yCAAA;UAAA,OAATD,GAAA,CAAAR,SAAA,EAAW;QAAA;;;;;;;;SAAXV,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}