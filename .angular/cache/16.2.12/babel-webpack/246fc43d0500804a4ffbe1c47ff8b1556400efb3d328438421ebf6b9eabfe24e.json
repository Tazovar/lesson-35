{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { _Card } from 'src/app/classes/cardClass';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nclass FormComponent {\n  constructor() {\n    this.cardEmitter = new EventEmitter();\n    this.CardObject = {\n      Enddate: \"\",\n      text: '',\n      imageUrl: null\n    };\n  }\n  submit() {\n    let card = new _Card(this.CardObject.Enddate, this.CardObject.text, this.CardObject.imageUrl);\n    this.cardEmitter.emit(card);\n  }\n  chooseImage(event) {\n    let file = event.target.files[0];\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = () => {\n      this.CardObject.imageUrl = fileReader.result;\n    };\n  }\n  static #_ = this.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    outputs: {\n      cardEmitter: \"cardEmitter\"\n    },\n    decls: 13,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleFormControlInput1\", 1, \"form-label\"], [\"name\", \"dateInput\", \"type\", \"date\", \"id\", \"exampleFormControlInput1\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"exampleFormControlTextarea1\", 1, \"form-label\"], [\"name\", \"textInput\", \"id\", \"exampleFormControlTextarea1\", \"rows\", \"3\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"fileInp\", \"type\", \"file\", \"id\", \"exampleFormControlInput2\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"End date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.CardObject.Enddate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"textarea\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_textarea_ngModelChange_8_listener($event) {\n          return ctx.CardObject.text = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function FormComponent_Template_input_change_10_listener($event) {\n          return ctx.chooseImage($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 7);\n        i0.ɵɵtext(12, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.CardObject.Enddate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.CardObject.text);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { FormComponent };","map":{"version":3,"names":["EventEmitter","_Card","FormComponent","constructor","cardEmitter","CardObject","Enddate","text","imageUrl","submit","card","emit","chooseImage","event","file","target","files","fileReader","FileReader","readAsDataURL","onload","result","_","_2","selectors","outputs","decls","vars","consts","template","FormComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","FormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","FormComponent_Template_input_ngModelChange_4_listener","$event","FormComponent_Template_textarea_ngModelChange_8_listener","FormComponent_Template_input_change_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/tazogelashvili/Desktop/lesson-3/src/app/components/form/form.component.ts","/Users/tazogelashvili/Desktop/lesson-3/src/app/components/form/form.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { _Card } from 'src/app/classes/cardClass';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent {\n@Output() cardEmitter:EventEmitter<_Card> = new EventEmitter<_Card>()\nCardObject:_Card = {\n  Enddate:\"\",\n  text: '',\n  imageUrl: null\n}\n\n\n\nsubmit():void {\n  let card = new _Card(this.CardObject.Enddate,this.CardObject.text,this.CardObject.imageUrl);\n  this.cardEmitter.emit(card)\n}\n\nchooseImage(event:Event | any):void{\nlet file:File = event.target.files[0];\nlet fileReader:FileReader = new FileReader()\nfileReader.readAsDataURL(file)\n\nfileReader.onload = () => {\n  this.CardObject.imageUrl = fileReader.result as string;\n}\n}\n}\n","\n<form (ngSubmit)=\"submit()\">\n    <div class=\"mb-3\">\n        <label for=\"exampleFormControlInput1\" class=\"form-label\">End date</label>\n        <input [(ngModel)]=\"CardObject.Enddate\" name=\"dateInput\" type=\"date\" class=\"form-control\" id=\"exampleFormControlInput1\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Content</label>\n        <textarea [(ngModel)]=\"CardObject.text\" name=\"textInput\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <input (change)=\"chooseImage($event)\" name=\"fileInp\" type=\"file\" class=\"form-control\" id=\"exampleFormControlInput2\" >\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;AAC/D,SAASC,KAAK,QAAQ,2BAA2B;;;AAGjD,MAKaC,aAAa;EAL1BC,YAAA;IAMU,KAAAC,WAAW,GAAuB,IAAIJ,YAAY,EAAS;IACrE,KAAAK,UAAU,GAAS;MACjBC,OAAO,EAAC,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE;KACX;;EAIDC,MAAMA,CAAA;IACJ,IAAIC,IAAI,GAAG,IAAIT,KAAK,CAAC,IAAI,CAACI,UAAU,CAACC,OAAO,EAAC,IAAI,CAACD,UAAU,CAACE,IAAI,EAAC,IAAI,CAACF,UAAU,CAACG,QAAQ,CAAC;IAC3F,IAAI,CAACJ,WAAW,CAACO,IAAI,CAACD,IAAI,CAAC;EAC7B;EAEAE,WAAWA,CAACC,KAAiB;IAC7B,IAAIC,IAAI,GAAQD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACrC,IAAIC,UAAU,GAAc,IAAIC,UAAU,EAAE;IAC5CD,UAAU,CAACE,aAAa,CAACL,IAAI,CAAC;IAE9BG,UAAU,CAACG,MAAM,GAAG,MAAK;MACvB,IAAI,CAACf,UAAU,CAACG,QAAQ,GAAGS,UAAU,CAACI,MAAgB;IACxD,CAAC;EACD;EAAC,QAAAC,CAAA,G;qBAvBYpB,aAAa;EAAA;EAAA,QAAAqB,EAAA,G;UAAbrB,aAAa;IAAAsB,SAAA;IAAAC,OAAA;MAAArB,WAAA;IAAA;IAAAsB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR1BE,EAAA,CAAAC,cAAA,cAA4B;QAAtBD,EAAA,CAAAE,UAAA,sBAAAC,gDAAA;UAAA,OAAYJ,GAAA,CAAAvB,MAAA,EAAQ;QAAA,EAAC;QACvBwB,EAAA,CAAAC,cAAA,aAAkB;QAC2CD,EAAA,CAAAI,MAAA,eAAQ;QAAAJ,EAAA,CAAAK,YAAA,EAAQ;QACzEL,EAAA,CAAAC,cAAA,eAAwH;QAAjHD,EAAA,CAAAE,UAAA,2BAAAI,sDAAAC,MAAA;UAAA,OAAAR,GAAA,CAAA3B,UAAA,CAAAC,OAAA,GAAAkC,MAAA;QAAA,EAAgC;QAAvCP,EAAA,CAAAK,YAAA,EAAwH;QAE1HL,EAAA,CAAAC,cAAA,aAAkB;QAC4CD,EAAA,CAAAI,MAAA,cAAO;QAAAJ,EAAA,CAAAK,YAAA,EAAQ;QAC3EL,EAAA,CAAAC,cAAA,kBAAwH;QAA9GD,EAAA,CAAAE,UAAA,2BAAAM,yDAAAD,MAAA;UAAA,OAAAR,GAAA,CAAA3B,UAAA,CAAAE,IAAA,GAAAiC,MAAA;QAAA,EAA6B;QAAiFP,EAAA,CAAAK,YAAA,EAAW;QAErIL,EAAA,CAAAC,cAAA,aAAkB;QACTD,EAAA,CAAAE,UAAA,oBAAAO,gDAAAF,MAAA;UAAA,OAAUR,GAAA,CAAApB,WAAA,CAAA4B,MAAA,CAAmB;QAAA,EAAC;QAArCP,EAAA,CAAAK,YAAA,EAAqH;QAEvHL,EAAA,CAAAC,cAAA,iBAA8C;QAAAD,EAAA,CAAAI,MAAA,cAAM;QAAAJ,EAAA,CAAAK,YAAA,EAAS;;;QATpDL,EAAA,CAAAU,SAAA,GAAgC;QAAhCV,EAAA,CAAAW,UAAA,YAAAZ,GAAA,CAAA3B,UAAA,CAAAC,OAAA,CAAgC;QAI7B2B,EAAA,CAAAU,SAAA,GAA6B;QAA7BV,EAAA,CAAAW,UAAA,YAAAZ,GAAA,CAAA3B,UAAA,CAAAE,IAAA,CAA6B;;;;;;;SDClCL,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}