{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass TestDirective {\n  constructor() {\n    this.count = 0;\n    this.countDisplay = '0'; // Binding for displaying count\n  }\n\n  onClick() {\n    this.interval = setInterval(() => {\n      this.count++;\n      this.countDisplay = this.count.toString(); // Update the displayed count\n      console.log(this.count);\n    }, 200);\n  }\n  onClickUp() {\n    clearInterval(this.interval);\n  }\n  static #_ = this.ɵfac = function TestDirective_Factory(t) {\n    return new (t || TestDirective)();\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TestDirective,\n    selectors: [[\"\", \"appTest\", \"\"]],\n    hostVars: 1,\n    hostBindings: function TestDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function TestDirective_mousedown_HostBindingHandler() {\n          return ctx.onClick();\n        })(\"mouseup\", function TestDirective_mouseup_HostBindingHandler() {\n          return ctx.onClickUp();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"innerText\", ctx.countDisplay);\n      }\n    }\n  });\n}\nexport { TestDirective };","map":{"version":3,"names":["TestDirective","constructor","count","countDisplay","onClick","interval","setInterval","toString","console","log","onClickUp","clearInterval","_","_2","selectors","hostVars","hostBindings","TestDirective_HostBindings","rf","ctx","TestDirective_mouseup_HostBindingHandler"],"sources":["/Users/tazogelashvili/Desktop/lesson-3/src/app/directives/test.directive.ts"],"sourcesContent":["import { Directive, HostBinding, HostListener } from \"@angular/core\";\n\n@Directive({\n    selector: '[appTest]'\n})\n\nexport class TestDirective{\n    count:number = 0;\n    interval:any\n\n    @HostBinding('innerText') countDisplay: string = '0'; // Binding for displaying count\n\n    @HostListener('mousedown')\n    onClick(){\n        this.interval = setInterval(() => {\n            this.count++;\n            this.countDisplay = this.count.toString(); // Update the displayed count\n            console.log(this.count);\n        },200);\n    }\n\n    @HostListener('mouseup')\n    onClickUp(){\n        clearInterval(this.interval);\n    }\n}\n"],"mappings":";AAEA,MAIaA,aAAa;EAJ1BC,YAAA;IAKI,KAAAC,KAAK,GAAU,CAAC;IAGU,KAAAC,YAAY,GAAW,GAAG,CAAC,CAAC;;;EAGtDC,OAAOA,CAAA;IACH,IAAI,CAACC,QAAQ,GAAGC,WAAW,CAAC,MAAK;MAC7B,IAAI,CAACJ,KAAK,EAAE;MACZ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACD,KAAK,CAACK,QAAQ,EAAE,CAAC,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,KAAK,CAAC;IAC3B,CAAC,EAAC,GAAG,CAAC;EACV;EAGAQ,SAASA,CAAA;IACLC,aAAa,CAAC,IAAI,CAACN,QAAQ,CAAC;EAChC;EAAC,QAAAO,CAAA,G;qBAlBQZ,aAAa;EAAA;EAAA,QAAAa,EAAA,G;UAAbb,aAAa;IAAAc,SAAA;IAAAC,QAAA;IAAAC,YAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAAbC,GAAA,CAAAf,OAAA,EAAS;QAAA,uBAAAgB,yCAAA;UAAA,OAATD,GAAA,CAAAT,SAAA,EAAW;QAAA;;;;;;;;SAAXV,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}